/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package speedo;

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemListener;
import javax.swing.JToggleButton;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.UIManager;

/**
 *
 * @author ozi
 */
public class framespd extends javax.swing.JFrame {
    
    Speedo spedometer = new Speedo();
    private boolean engineStart;
    private int maxRPM;
    private int maxSpeedState;
    private int defaultSpeed;
    private int defaultRPM;
    private int gearVal;
    
    
    

    /**
     * Creates new form framespd
     */
    public framespd() {
        initComponents();
        GASS.setEnabled(false);
        BRAKE.setEnabled(false);
        gearDown.setEnabled(false);
        gearUp.setEnabled(false);
        gearView.setText("-");
        gearVal = 0;
        maxRPM = 8000;
        defaultSpeed = 0;
        defaultRPM = 100;
        engineStart= false;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    

        Timer increaseSpeed = new Timer(100,new ActionListener(){
            @Override
            public void actionPerformed (ActionEvent e){
                switch (gearVal){
                    case 1 :
                        if(spedometer.getSpeed() < 20){
                                
                                defaultRPM = defaultRPM +250;
                                defaultSpeed =defaultSpeed +3;
                                spedometer.setSpeed(defaultSpeed);
                                spedometer.setRPM(defaultRPM);
                                if(defaultRPM >=8000 ){
                                    defaultRPM = 8000;
                                }
                                speedVal.setText(String.valueOf(spedometer.getSpeed()));
                                rpmVal.setText(String.valueOf(spedometer.getRPM()));
                                repaint();
                                System.out.println("cetak");
                                increaseSpeed.setInitialDelay(50);
                            
                        }else{
                            increaseSpeed.stop();
                        }
                        break;
                    case 2 :
                        if(spedometer.getSpeed() < 40){
                            
                                defaultRPM = defaultRPM +200;
                                defaultSpeed =defaultSpeed +2;
                                spedometer.setSpeed(defaultSpeed);
                                spedometer.setRPM(defaultRPM);
                                if(defaultRPM >=8000 ){
                                    defaultRPM = 8000;
                                }
                                speedVal.setText(String.valueOf(spedometer.getSpeed()));
                                rpmVal.setText(String.valueOf(spedometer.getRPM()));
                                repaint();
                                System.out.println("cetak");
                                increaseSpeed.setInitialDelay(150);
                           
                        }else{
                            increaseSpeed.stop();
                        }
                        break;
                    case 3 :
                        if(spedometer.getSpeed() < 60){
                           
                                defaultRPM = defaultRPM +150;
                                defaultSpeed =defaultSpeed +1;
                                spedometer.setSpeed(defaultSpeed);
                                spedometer.setRPM(defaultRPM);
                                if(defaultRPM >=8000 ){
                                    defaultRPM = 8000;
                                }
                                speedVal.setText(String.valueOf(spedometer.getSpeed()));
                                rpmVal.setText(String.valueOf(spedometer.getRPM()));
                                repaint();
                                System.out.println("cetak");
                                increaseSpeed.setDelay(200);
                           
                        }else{
                            increaseSpeed.stop();
                        }
                        break;
                    case 4 :
                        if(spedometer.getSpeed() < 100){
                            
                                defaultRPM = defaultRPM +150;
                                defaultSpeed =defaultSpeed + 1;
                                spedometer.setSpeed(defaultSpeed);
                                spedometer.setRPM(defaultRPM);
                                if(defaultRPM >=8000 ){
                                    defaultRPM = 8000;
                                }
                                speedVal.setText(String.valueOf(spedometer.getSpeed()));
                                rpmVal.setText(String.valueOf(spedometer.getRPM()));
                                repaint();
                                System.out.println("cetak");
                                increaseSpeed.setDelay(250);
                            
                        }else{
                            increaseSpeed.stop();
                        }
                        break;
                    default :
                        if(spedometer.getSpeed() < 20){
                            
                                defaultRPM = defaultRPM +250;
                                //defaultSpeed =defaultSpeed +3;
                                spedometer.setSpeed(defaultSpeed);
                                spedometer.setRPM(defaultRPM);
                                if(defaultRPM >=8000 ){
                                    defaultRPM = 8000;
                                }
                                //speedVal.setText(String.valueOf(spedometer.getSpeed()));
                                rpmVal.setText(String.valueOf(spedometer.getRPM()));
                                repaint();
                                System.out.println("cetak");
                                increaseSpeed.setInitialDelay(50);
                           
                        }else{
                            increaseSpeed.stop();
                        }
                        break;
                }
            }
        });
        
        Timer decreaseSpeed = new Timer(200,new ActionListener(){
            @Override
            public void actionPerformed (ActionEvent e){
                
                System.out.println("start makin lambat");
                defaultRPM = defaultRPM -200;
                defaultSpeed =defaultSpeed - 2;
                if(defaultRPM < 100 && defaultSpeed <=0){
                    defaultRPM=100;
                    defaultSpeed=0;
                }
                spedometer.setSpeed(defaultSpeed);
                spedometer.setRPM(defaultRPM);
                
                repaint();
                speedVal.setText(String.valueOf(spedometer.getSpeed()));
                rpmVal.setText(String.valueOf(spedometer.getRPM()));
                System.out.println("cetak");
               //decreaseSpeed.setDelay(50);
            }
        });
    
     Timer brakingSys = new Timer(100,new ActionListener(){
            @Override
            public void actionPerformed (ActionEvent e){
                
                System.out.println("ngerem");
                defaultRPM = defaultRPM -400;
                defaultSpeed =defaultSpeed - 4;
                if(defaultRPM < 100){
                    defaultRPM=100;
                }
                spedometer.setSpeed(defaultSpeed);
                spedometer.setRPM(defaultRPM);
                speedVal.setText(String.valueOf(spedometer.getSpeed()));
                rpmVal.setText(String.valueOf(spedometer.getRPM()));
                repaint();
                System.out.println("cetak rem");
               //decreaseSpeed.setDelay(50);
            }
        });
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        speedVal = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        rpmVal = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        gearView = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        gearDown = new javax.swing.JButton();
        gearUp = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        GASS = new javax.swing.JButton();
        BRAKE = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jToggleButton1.setBackground(new java.awt.Color(204, 0, 0));
        jToggleButton1.setText("ON");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 101, -1, -1));

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setFont(new java.awt.Font("Demonized", 0, 10)); // NOI18N
        jLabel1.setText("SPEED");

        speedVal.setFont(new java.awt.Font("Prototype", 0, 24)); // NOI18N
        speedVal.setText("0");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(speedVal)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(speedVal)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 11, -1, -1));

        jPanel6.setBackground(new java.awt.Color(153, 153, 153));

        jLabel2.setFont(new java.awt.Font("Demonized", 0, 10)); // NOI18N
        jLabel2.setText("RPM");

        rpmVal.setFont(new java.awt.Font("Prototype", 0, 18)); // NOI18N
        rpmVal.setText("0");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(rpmVal)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rpmVal, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(24, 24, 24))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(201, 90, -1, -1));

        jPanel7.setBackground(new java.awt.Color(153, 153, 153));

        jLabel3.setFont(new java.awt.Font("Demonized", 0, 10)); // NOI18N
        jLabel3.setText("GEAR");

        gearView.setFont(new java.awt.Font("Prototype", 0, 18)); // NOI18N
        gearView.setText("N");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gearView)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(gearView, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 101, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 180));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        gearDown.setBackground(new java.awt.Color(0, 255, 255));
        gearDown.setText("-");
        gearDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gearDownActionPerformed(evt);
            }
        });

        gearUp.setBackground(new java.awt.Color(0, 255, 255));
        gearUp.setText("+");
        gearUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gearUpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(gearUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gearDown, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gearUp, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gearDown, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));

        GASS.setBackground(new java.awt.Color(102, 255, 51));
        GASS.setFont(new java.awt.Font("PaybAck", 1, 18)); // NOI18N
        GASS.setText("GASS");
        GASS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                GASSMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                GASSMouseReleased(evt);
            }
        });

        BRAKE.setBackground(new java.awt.Color(255, 51, 51));
        BRAKE.setFont(new java.awt.Font("PaybAck", 1, 18)); // NOI18N
        BRAKE.setText("BRAKE");
        BRAKE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BRAKEMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BRAKEMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addComponent(BRAKE, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GASS, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GASS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BRAKE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 11, -1, 100));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 186, 320, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        if(jToggleButton1.isSelected()){
            engineStart=true;
        GASS.setEnabled(true);
        BRAKE.setEnabled(true);
        gearDown.setEnabled(true);
        gearUp.setEnabled(true);
        jToggleButton1.setText("OFF");
        jToggleButton1.setBackground(Color.green);
        gearView.setText("N");
        rpmVal.setText("100");
        speedVal.setText("0");
        }else {
            engineStart=false;
            GASS.setEnabled(false);
        BRAKE.setEnabled(false);
        gearDown.setEnabled(false);
        gearUp.setEnabled(false);
        jToggleButton1.setText("ON");
        jToggleButton1.setBackground(Color.red);
        increaseSpeed.stop();
        decreaseSpeed.stop();
        brakingSys.stop();
        gearView.setText("-");
        rpmVal.setText("-");
        speedVal.setText("-");
        }
            
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void gearUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gearUpActionPerformed
        // TODO add your handling code here:
        if(engineStart == true){
            defaultRPM = defaultRPM-1000;
            if(gearVal == 4){
                gearView.setText("4");
            }
            else{
                gearVal++;
                gearView.setText(""+gearVal);
        }
        }
    }//GEN-LAST:event_gearUpActionPerformed

    private void gearDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gearDownActionPerformed
        // TODO add your handling code here:
        if(engineStart == true){
            if(gearView.getText() == "N"){
                gearView.setText("N");
            }
            else{
                gearVal--;
                if(gearVal == 0){
                    gearView.setText("N");
                }
                else{
                    gearView.setText(""+gearVal);
                }
            }
        }
    }//GEN-LAST:event_gearDownActionPerformed

    private void GASSMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GASSMouseReleased
        // TODO add your handling code here:
        if(engineStart==true){
       SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                if(defaultRPM<=100){
                    System.out.println("stop loop");
                    decreaseSpeed.stop();
                }
                increaseSpeed.stop();
                decreaseSpeed.restart();
            }
        });
        }
    }//GEN-LAST:event_GASSMouseReleased

    private void GASSMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GASSMousePressed
        // TODO add your handling code here:
        if(engineStart==true){
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                if(defaultRPM>=8000){
                    increaseSpeed.stop();
                }
                decreaseSpeed.stop();
                increaseSpeed.restart();
            }
        });
        }
    }//GEN-LAST:event_GASSMousePressed

    private void BRAKEMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BRAKEMousePressed
        // TODO add your handling code here:
        if(engineStart==true)
        brakingSys.restart();
    }//GEN-LAST:event_BRAKEMousePressed

    private void BRAKEMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BRAKEMouseReleased
        // TODO add your handling code here:
        if(engineStart==true)
        brakingSys.stop();
    }//GEN-LAST:event_BRAKEMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(framespd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(framespd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(framespd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(framespd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new framespd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BRAKE;
    private javax.swing.JButton GASS;
    private javax.swing.JButton gearDown;
    private javax.swing.JButton gearUp;
    private javax.swing.JLabel gearView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel rpmVal;
    private javax.swing.JLabel speedVal;
    // End of variables declaration//GEN-END:variables
}
